@model BookStore.ViewModels.BookViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "Books", FormMethod.Post, new { enctype = "multipart/form-data"})) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>BookModels</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Book.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Book.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Book.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Book.Author, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Book.Author, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Book.Author, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Book.BookGenreModels.Id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Book.BookGenreModels.Id,
                                  new SelectList(Model.Genres, "Id", "Name"),
                                  "Genre of movie",
                                  new
                                  {
                                      @class = "form-control",
                                      OnMouseDown = "this.size=5;",
                                      OnFocusOut = "this.size=1;",
                                      OnDblClick = "this.size=1;"
                                  })
            @Html.ValidationMessageFor(model => model.Book.BookGenreModels.Id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Book.MovieModels.Id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Book.MovieModels.Id,
                                  new SelectList(Model.RelatedMovie, "Id", "Name"),
                                  "No related movie",
                                  new
                                  {
                                      @class = "form-control",
                                      OnMouseDown = "this.size=5;",
                                      OnFocusOut = "this.size=1;",
                                      OnDblClick = "this.size=1;"
                                  })
            @Html.ValidationMessageFor(model => model.Book.MovieModels, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Book.ReleaseYear, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Book.ReleaseYear, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Book.ReleaseYear, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Book.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Book.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Book.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label for="exampleInputFile" class="bmd-label-floating col-md-2">Image</label>
        <div class="col-md-10">
            <input type="file" class="form-control-file" id="exampleInputFile" name="uploadImage">
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Book.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Book.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Book.Price, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
    <div class="col-md-offset-2 col-md-10">
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
